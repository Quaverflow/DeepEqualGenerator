// <auto-generated/>
#nullable enable
using Microsoft.CodeAnalysis;

namespace DeepEqual.Generator
{
    internal static class DiagCatalog
    {
        private const string Category = "DeepEqual.Generator.Fluent";

        public static readonly DiagnosticDescriptor CFG001 = new(
            id: "CFG001",
            title: "Unknown KeyMembers in fluent",
            messageFormat: "{0} not found; did you mean {1}?",
            category: Category,
            defaultSeverity: DiagnosticSeverity.Warning,
            isEnabledByDefault: true);

        public static readonly DiagnosticDescriptor CFG002 = new(
            id: "CFG002",
            title: "Conflict between member attribute and fluent config",
            messageFormat: "Member attribute and fluent both set rules for {0} â€” member attribute wins.",
            category: Category,
            defaultSeverity: DiagnosticSeverity.Info,
            isEnabledByDefault: true);

        public static readonly DiagnosticDescriptor CFG003 = new(
            id: "CFG003",
            title: "External root adopted without fluent rules",
            messageFormat: "External root '{0}' is adopted; no fluent rules found.",
            category: Category,
            defaultSeverity: DiagnosticSeverity.Info,
            isEnabledByDefault: true);

        public static readonly DiagnosticDescriptor CFG004 = new(
            id: "CFG004",
            title: "Members and IgnoreMembers overlap",
            messageFormat: "Members and IgnoreMembers overlap on '{0}'. Consider removing duplication.",
            category: Category,
            defaultSeverity: DiagnosticSeverity.Warning,
            isEnabledByDefault: true);
    }
}